<!--

    Copyright (c) 2019 TerraFrame, Inc. All rights reserved.

    This file is part of Geoprism Registry(tm).

    Geoprism Registry(tm) is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    Geoprism Registry(tm) is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with Geoprism Registry(tm).  If not, see <http://www.gnu.org/licenses/>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.geoprism</groupId>
		<artifactId>georegistry</artifactId>
		<version>0.9.1-SNAPSHOT</version>
	</parent>
	<artifactId>georegistry-web</artifactId>
	<packaging>war</packaging>

	<name>GeoRegistry Web</name>

	<properties>
		<geoserver.version>2.14.2</geoserver.version>
		<db.name>georegistry</db.name>
		<db.user>georegistry</db.user>
		<db.port>5432</db.port>
		<local.host>$${pageContext.request.contextPath}</local.host>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.10.5</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.5.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>net.geoprism</groupId>
			<artifactId>georegistry-server</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.geoprism</groupId>
			<artifactId>geoprism-web</artifactId>
			<version>${geoprism.version}</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.geoserver</groupId>
			<artifactId>geoserver</artifactId>
			<version>${geoserver.version}</version>
			<type>war</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.jawr</groupId>
			<artifactId>jawr-core</artifactId>
			<version>3.7</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope> <!-- This dependency is NOT transitive because scope=provided -->
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>ng2-dev</id>
			<properties>
				<local.host>https://localhost:8080</local.host>
			</properties>
		</profile>
		<profile>
			<id>cargo-run-georegistry</id>
			<activation>
				<property>
					<name>cargo-run-georegistry</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.7.11</version>
						<configuration>
							<container>
								<containerId>tomcat8x</containerId>
								<artifactInstaller>
									<groupId>org.apache.tomcat</groupId>
									<artifactId>tomcat</artifactId>
									<version>8.5.53</version>
								</artifactInstaller>
								<timeout>4800000</timeout>
							</container>
							<configuration>
								<properties>
									<cargo.servlet.port>8443</cargo.servlet.port>
									<cargo.protocol>https</cargo.protocol>
									<cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
									<cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
									<cargo.tomcat.connector.keystoreFile>/${project.basedir}/src/test/resources/keystore.ks</cargo.tomcat.connector.keystoreFile>
									<cargo.tomcat.connector.keystorePass>2v8hVW2rPFncN6m</cargo.tomcat.connector.keystorePass>
									<cargo.tomcat.connector.keyAlias>tomcat</cargo.tomcat.connector.keyAlias>
									<cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
									<cargo.jvmargs>
										-Xmx5120M
										-Xdebug
										-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
										-Dtomcat.home=/${project.basedir}/target/cargo/configurations/tomcat8x
										-Djavax.net.ssl.keyStore=/${project.basedir}/src/test/resources/keystore.ks
										-Djavax.net.ssl.keyStorePassword=2v8hVW2rPFncN6m
										-Djavax.net.ssl.trustStore=/${project.basedir}/src/test/resources/tomcat.truststore
										-Djavax.net.ssl.trustStorePassword=2v8hVW2rPFncN6m
										-Djava.rmi.server.hostname=127.0.0.1
										-Dbirt-server=true
										-Denvcfg=${project.basedir}/../envcfg
										-Dproject.basedir=${project.basedir}
									</cargo.jvmargs>
								</properties>
							</configuration>
							<deployables>
								<deployable>
									<groupId>net.geoprism</groupId>
									<artifactId>georegistry-web</artifactId>
									<type>war</type>
									<properties>
										<context>georegistry</context>
									</properties>
								</deployable>
								<deployable>
									<groupId>org.geoserver</groupId>
									<artifactId>geoserver</artifactId>
									<type>war</type>
									<properties>
										<context>geoserver</context>
									</properties>
								</deployable>
							</deployables>
						</configuration>
						<executions>
							<execution>
								<id>cargo-run</id>
								<phase>verify</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<!-- Just for convenience, this stops us from having to add the version 
			when we hit our webapp. -->
		<finalName>georegistry</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.xlsx</exclude>
					<exclude>**/*.zip</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.xlsx</include>
					<include>**/*.zip</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>maven-replacer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<id>replace-georegistry-index.jsp</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<file>src/main/webapp/WEB-INF/net/geoprism/registry/index.jsp</file>
							<outputFile>target/georegistry/WEB-INF/net/geoprism/registry/index.jsp</outputFile>
							<regex>false</regex>
							<token>$local.host$</token>
							<value>${local.host}</value>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<!-- Weave Aspects -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>${aspectj.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>com.runwaysdk</groupId>
							<artifactId>runwaysdk-server</artifactId>
						</aspectLibrary>
					</aspectLibraries>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<complianceLevel>${maven.compiler.target}</complianceLevel>
					<fork>true</fork>
					<meminitial>512m</meminitial>
					<maxmem>1024m</maxmem>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warSourceExcludes>**/prism.jsp,**/admin.jsp,**/index.jsp</warSourceExcludes>
					<packagingExcludes>
						<!-- Exclude all jars provided by tomcat -->
						**/catalina*.jar,
						**/servlet-api*.jar,
						**/annotations-api*.jar,
						<!-- Exclude aspectjtools because it conflicts with our BIRT jar -->
						**/aspectjtools*.jar
					</packagingExcludes>
					<overlays>
						<overlay>
							<!-- empty groupId/artifactId represents the current build -->
						</overlay>
						<overlay>
							<groupId>net.geoprism</groupId>
							<artifactId>geoprism-web</artifactId>
							<excludes>
								<exclude>WEB-INF/lib/*.jar</exclude>
							</excludes>
						</overlay>
					</overlays>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
