package net.geoprism.registry.action.geoobject;

@com.runwaysdk.business.ClassSignature(hash = 1921229207)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to CreateGeoObjectAction.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class CreateGeoObjectActionBase extends net.geoprism.registry.action.geoobject.GeoObjectAction
{
  public final static String CLASS = "net.geoprism.registry.action.geoobject.CreateGeoObjectAction";
  public static java.lang.String GEOOBJECTJSON = "geoObjectJson";
  public static java.lang.String HIERARCHYCODE = "hierarchyCode";
  public static java.lang.String HIERARCHYJSON = "hierarchyJson";
  private static final long serialVersionUID = 1921229207;
  
  public CreateGeoObjectActionBase()
  {
    super();
  }
  
  public String getGeoObjectJson()
  {
    return getValue(GEOOBJECTJSON);
  }
  
  public void validateGeoObjectJson()
  {
    this.validateAttribute(GEOOBJECTJSON);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getGeoObjectJsonMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.action.geoobject.CreateGeoObjectAction.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(GEOOBJECTJSON);
  }
  
  public void setGeoObjectJson(String value)
  {
    if(value == null)
    {
      setValue(GEOOBJECTJSON, "");
    }
    else
    {
      setValue(GEOOBJECTJSON, value);
    }
  }
  
  public String getHierarchyCode()
  {
    return getValue(HIERARCHYCODE);
  }
  
  public void validateHierarchyCode()
  {
    this.validateAttribute(HIERARCHYCODE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getHierarchyCodeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.action.geoobject.CreateGeoObjectAction.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(HIERARCHYCODE);
  }
  
  public void setHierarchyCode(String value)
  {
    if(value == null)
    {
      setValue(HIERARCHYCODE, "");
    }
    else
    {
      setValue(HIERARCHYCODE, value);
    }
  }
  
  public String getHierarchyJson()
  {
    return getValue(HIERARCHYJSON);
  }
  
  public void validateHierarchyJson()
  {
    this.validateAttribute(HIERARCHYJSON);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getHierarchyJsonMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.action.geoobject.CreateGeoObjectAction.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(HIERARCHYJSON);
  }
  
  public void setHierarchyJson(String value)
  {
    if(value == null)
    {
      setValue(HIERARCHYJSON, "");
    }
    else
    {
      setValue(HIERARCHYJSON, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static CreateGeoObjectAction get(String oid)
  {
    return (CreateGeoObjectAction) com.runwaysdk.business.Business.get(oid);
  }
  
  public static CreateGeoObjectAction getByKey(String key)
  {
    return (CreateGeoObjectAction) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static CreateGeoObjectAction lock(java.lang.String oid)
  {
    CreateGeoObjectAction _instance = CreateGeoObjectAction.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static CreateGeoObjectAction unlock(java.lang.String oid)
  {
    CreateGeoObjectAction _instance = CreateGeoObjectAction.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
