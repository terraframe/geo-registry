package net.geoprism.registry.action.geoobject;

@com.runwaysdk.business.ClassSignature(hash = 907625934)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ValueOverTimeAttributeAction.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class ValueOverTimeAttributeActionBase extends net.geoprism.registry.action.geoobject.AttributeAction
{
  public final static String CLASS = "net.geoprism.registry.action.geoobject.ValueOverTimeAttributeAction";
  public static java.lang.String ACTION = "action";
  public static java.lang.String NEWENDDATE = "newEndDate";
  public static java.lang.String NEWSTARTDATE = "newStartDate";
  public static java.lang.String OLDENDDATE = "oldEndDate";
  public static java.lang.String OLDSTARTDATE = "oldStartDate";
  private static final long serialVersionUID = 907625934;
  
  public ValueOverTimeAttributeActionBase()
  {
    super();
  }
  
  public String getAction()
  {
    return getValue(ACTION);
  }
  
  public void validateAction()
  {
    this.validateAttribute(ACTION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getActionMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.action.geoobject.ValueOverTimeAttributeAction.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(ACTION);
  }
  
  public void setAction(String value)
  {
    if(value == null)
    {
      setValue(ACTION, "");
    }
    else
    {
      setValue(ACTION, value);
    }
  }
  
  public java.util.Date getNewEndDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(NEWENDDATE));
  }
  
  public void validateNewEndDate()
  {
    this.validateAttribute(NEWENDDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDateDAOIF getNewEndDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.action.geoobject.ValueOverTimeAttributeAction.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDateDAOIF)mdClassIF.definesAttribute(NEWENDDATE);
  }
  
  public void setNewEndDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(NEWENDDATE, "");
    }
    else
    {
      setValue(NEWENDDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public java.util.Date getNewStartDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(NEWSTARTDATE));
  }
  
  public void validateNewStartDate()
  {
    this.validateAttribute(NEWSTARTDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDateDAOIF getNewStartDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.action.geoobject.ValueOverTimeAttributeAction.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDateDAOIF)mdClassIF.definesAttribute(NEWSTARTDATE);
  }
  
  public void setNewStartDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(NEWSTARTDATE, "");
    }
    else
    {
      setValue(NEWSTARTDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public java.util.Date getOldEndDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(OLDENDDATE));
  }
  
  public void validateOldEndDate()
  {
    this.validateAttribute(OLDENDDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDateDAOIF getOldEndDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.action.geoobject.ValueOverTimeAttributeAction.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDateDAOIF)mdClassIF.definesAttribute(OLDENDDATE);
  }
  
  public void setOldEndDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(OLDENDDATE, "");
    }
    else
    {
      setValue(OLDENDDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  public java.util.Date getOldStartDate()
  {
    return com.runwaysdk.constants.MdAttributeDateUtil.getTypeSafeValue(getValue(OLDSTARTDATE));
  }
  
  public void validateOldStartDate()
  {
    this.validateAttribute(OLDSTARTDATE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDateDAOIF getOldStartDateMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.action.geoobject.ValueOverTimeAttributeAction.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDateDAOIF)mdClassIF.definesAttribute(OLDSTARTDATE);
  }
  
  public void setOldStartDate(java.util.Date value)
  {
    if(value == null)
    {
      setValue(OLDSTARTDATE, "");
    }
    else
    {
      setValue(OLDSTARTDATE, new java.text.SimpleDateFormat(com.runwaysdk.constants.Constants.DATE_FORMAT).format(value));
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static ValueOverTimeAttributeActionQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    ValueOverTimeAttributeActionQuery query = new ValueOverTimeAttributeActionQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static ValueOverTimeAttributeAction get(String oid)
  {
    return (ValueOverTimeAttributeAction) com.runwaysdk.business.Business.get(oid);
  }
  
  public static ValueOverTimeAttributeAction getByKey(String key)
  {
    return (ValueOverTimeAttributeAction) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static ValueOverTimeAttributeAction lock(java.lang.String oid)
  {
    ValueOverTimeAttributeAction _instance = ValueOverTimeAttributeAction.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static ValueOverTimeAttributeAction unlock(java.lang.String oid)
  {
    ValueOverTimeAttributeAction _instance = ValueOverTimeAttributeAction.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}
